classdef TPrime < npxtoolkit.tasks.TaskBase
    properties
        Info
        Config
        Output
    end

    methods
        function obj = TPrime(taskInfo, taskConfig)
            obj.Info = taskInfo;
            obj.Config = taskConfig;
        end
        
        function execute(obj)
            disp(strcat("Running task: ", obj.Info));
            config = obj.Config;

            prb = '0'; % TODO - probe number, pass from task init

            runFolderName = strcat(config.RunName, '_g', config.GateIdx);
            catGTResultFolderName = strcat('catgt_', runFolderName);
            probFolderName = strcat(runFolderName, '_imec', prb);
            probFolder = fullfile(config.NpxDir, runFolderName, probFolderName);
            inputDataDirectory = probFolder;
            fileName = strcat(runFolderName, '_tcat.imec', prb, '.ap.bin');
            metaName = strcat(runFolderName, '_tcat.imec', prb, '.ap.meta');

            inputMetaFullpath = fullfile(config.NpxDir, catGTResultFolderName, probFolderName, metaName);
            continuousFile = fullfile(config.NpxDir, catGTResultFolderName, probFolderName, fileName);

            taskName = strcat(config.RunName, '_TPrime');
            inputJson = fullfile(config.JsonDir, strcat(taskName, '-input.json'));
            outputJson = fullfile(config.JsonDir, strcat(taskName, '-output.json'));

            % build list of sync extractions to send to TPrime
            syncExtract = strcat('-SY=', prb, ',-1,6,500');
            imExList = strcat(config.ImExList, ' ', syncExtract);
            disp(strcat('imExList: ', imExList));
            
            info = py.py_modules.caller.createInputJson(...
                pyargs(...
                    'output_file', inputJson,...
                    'ecephys_directory', config.EcephysDir,...
                    'kilosort_repository', config.KilosortRepo,...
                    'KS2ver', config.KSver,...
                    'npy_matlab_repository', config.NpyMatlabRepo,...
                    'catGTPath', config.CatGTPath,...
                    'tPrime_path', config.TPrimePath,...
                    'cWaves_path', config.CWavesPath,...
                    'kilosort_output_tmp', config.KilosortOutputTmp,...
                    'npx_directory', config.NpxDir,...
                    'continuous_file', continuousFile,...
                    'spikeGLX_data', config.SpikeGLXData,...
                    'input_meta_path', inputMetaFullpath,...
                    'kilosort_output_directory', config.CatGTDest,...
                    'extracted_data_directory', config.CatGTDest,...
                    'tPrime_im_ex_list', imExList,...
                    'tPrime_ni_ex_list', config.NiExtractStr,...
                    'event_ex_param_str', config.EventExParamStr,...
                    'sync_period', config.SyncPeriod,...
                    'toStream_sync_params', config.ToStreamSyncParams,...
                    'niStream_sync_params', config.NiStreamSyncParams,...
                    'tPrime_3A', config.TPrime3A,...
                    'toStream_path_3A', config.ToStreamPath3A,...
                    'fromStream_list_3A', config.FromStreamList3A...
                )...
            );

            if config.RunTPrime
                % TODO - reduce python
                params = strcat("-W ignore -m ecephys_spike_sorting.modules.tPrime_helper",...
                                " --input_json ", inputJson,...
                                " --output_json ", outputJson);
                disp(params);
                % py.py_modules.caller.call_python(params);
            end
        end
    end
end